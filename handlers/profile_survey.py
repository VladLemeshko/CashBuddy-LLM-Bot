from aiogram import Router, F, types
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from aiogram.filters import CommandStart, Command
from db import DB_PATH
import aiosqlite
from keyboards.main_menu import main_menu

router = Router()

class ProfileSurvey(StatesGroup):
    waiting_for_income_type = State()
    waiting_for_monthly_income = State()
    waiting_for_has_deposits = State()
    waiting_for_deposit_details = State()
    waiting_for_has_loans = State()
    waiting_for_loans_details = State()
    waiting_for_has_investments = State()
    waiting_for_investments_details = State()
    waiting_for_financial_mood = State()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
start_survey_kb = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text="–ù–∞—á–∞—Ç—å")], [KeyboardButton(text="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å")]],
    resize_keyboard=True
)
income_type_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–ü–æ—Å—Ç–æ—è–Ω–Ω–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞")],
        [KeyboardButton(text="–ù–µ—Ä–µ–≥—É–ª—è—Ä–Ω—ã–π –¥–æ—Ö–æ–¥")],
        [KeyboardButton(text="–î–æ—Ö–æ–¥ –æ—Ç –±–∏–∑–Ω–µ—Å–∞")],
        [KeyboardButton(text="–ù–µ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞")],
    ],
    resize_keyboard=True
)
has_deposits_kb = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text="–î–∞")], [KeyboardButton(text="–ù–µ—Ç")]],
    resize_keyboard=True
)
has_loans_kb = has_deposits_kb
has_investments_kb = has_deposits_kb
financial_mood_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–í—Å—ë –æ—Ç–ª–∏—á–Ω–æ, –≤—Å—ë –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º!")],
        [KeyboardButton(text="–ú–æ–≥–ª–æ –±—ã –±—ã—Ç—å –ª—É—á—à–µ, —Ö–æ—á—É –±–æ–ª—å—à–µ –ø–æ—Ä—è–¥–∫–∞")],
        [KeyboardButton(text="–ï—Å—Ç—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏, —Ö–æ—á—É —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è")],
    ],
    resize_keyboard=True
)

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ
@router.message(CommandStart())
async def cmd_start(message: types.Message, state: FSMContext):
    user_name = message.from_user.first_name or "–¥—Ä—É–≥"
    text = (
        f"üëã –ü—Ä–∏–≤–µ—Ç, {user_name}! –Ø ‚Äî —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –ø–æ–º–æ—â–Ω–∏–∫.\n\n"
        "–ß—Ç–æ–±—ã –¥–∞–≤–∞—Ç—å —Ç–µ–±–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø–æ–ª–µ–∑–Ω—ã–µ –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–æ–≤–µ—Ç—ã, –º–Ω–µ –Ω—É–∂–Ω–æ –Ω–µ–º–Ω–æ–≥–æ —É–∑–Ω–∞—Ç—å –æ —Ç–≤–æ–µ–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏.\n\n"
        "‚ú® –ß–µ–º –±–æ–ª—å—à–µ —è –∑–Ω–∞—é –æ —Ç–≤–æ–∏—Ö –¥–æ—Ö–æ–¥–∞—Ö, –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è—Ö, –∫—Ä–µ–¥–∏—Ç–∞—Ö –∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è—Ö, —Ç–µ–º —Ç–æ—á–Ω–µ–µ –∏ –ø–æ–ª–µ–∑–Ω–µ–µ –±—É–¥—É—Ç –º–æ–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏. –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —ç–∫–æ–Ω–æ–º–∏—Ç—å, –Ω–∞—Ö–æ–¥–∏—Ç—å –ª—É—á—à–∏–µ —Ä–µ—à–µ–Ω–∏—è –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Ç–≤–æ–∏ —Ü–µ–ª–∏!\n\n"
        "üîí –ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π, —ç—Ç–æ –∞–±—Å–æ–ª—é—Ç–Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ: –≤—Å–µ —Ç–≤–æ–∏ –æ—Ç–≤–µ—Ç—ã —Ö—Ä–∞–Ω—è—Ç—Å—è —Ç–æ–ª—å–∫–æ —É —Ç–µ–±—è –≤ –ø—Ä–æ—Ñ–∏–ª–µ –∏ –Ω–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º.\n\n"
        "–ì–æ—Ç–æ–≤(–∞) –ø—Ä–æ–π—Ç–∏ –∫–æ—Ä–æ—Ç–∫–∏–π –æ–ø—Ä–æ—Å? –≠—Ç–æ –∑–∞–π–º—ë—Ç –Ω–µ –±–æ–ª—å—à–µ –º–∏–Ω—É—Ç—ã! üöÄ"
    )
    await message.answer(text, reply_markup=start_survey_kb)
    await state.clear()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –Ω–∞—á–∞—Ç—å/–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å
@router.message(F.text.in_(["–ù–∞—á–∞—Ç—å", "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"]))
async def survey_entry(message: types.Message, state: FSMContext):
    if message.text == "–ù–∞—á–∞—Ç—å":
        await message.answer("1Ô∏è‚É£ –ö–∞–∫–æ–π —É —Ç–µ–±—è –æ—Å–Ω–æ–≤–Ω–æ–π –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–æ—Ö–æ–¥–∞?\n(–í—ã–±–µ—Ä–∏ –≤–∞—Ä–∏–∞–Ω—Ç –Ω–∏–∂–µ üëá)", reply_markup=income_type_kb)
        await state.set_state(ProfileSurvey.waiting_for_income_type)
    else:
        await message.answer("–û–ø—Ä–æ—Å –ø—Ä–æ–ø—É—â–µ–Ω. –¢—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –∑–∞–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–∑–∂–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö.", reply_markup=ReplyKeyboardRemove())
        await state.clear()

# 1. –¢–∏–ø –¥–æ—Ö–æ–¥–∞
@router.message(ProfileSurvey.waiting_for_income_type)
async def income_type_q(message: types.Message, state: FSMContext):
    await state.update_data(income_type=message.text)
    await message.answer("2Ô∏è‚É£ –ö–∞–∫–æ–π —É —Ç–µ–±—è —Å—Ä–µ–¥–Ω–∏–π –¥–æ—Ö–æ–¥ –≤ –º–µ—Å—è—Ü?\n(–ù–∞–ø–∏—à–∏ —Å—É–º–º—É –≤ —Ä—É–±–ª—è—Ö, –Ω–∞–ø—Ä–∏–º–µ—Ä: 50000)", reply_markup=ReplyKeyboardRemove())
    await state.set_state(ProfileSurvey.waiting_for_monthly_income)

# 2. –î–æ—Ö–æ–¥
@router.message(ProfileSurvey.waiting_for_monthly_income)
async def monthly_income_q(message: types.Message, state: FSMContext):
    try:
        income = float(message.text.replace(',', '.'))
    except ValueError:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —Å—É–º–º—É —á–∏—Å–ª–æ–º, –Ω–∞–ø—Ä–∏–º–µ—Ä: 50000")
        return
    await state.update_data(monthly_income=income)
    await message.answer("3Ô∏è‚É£ –ï—Å—Ç—å –ª–∏ —É —Ç–µ–±—è –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ –≤–∫–ª–∞–¥—ã –∏–ª–∏ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è?\n(–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –º–Ω–µ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–≤–æ–∏ —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è üí∞)", reply_markup=has_deposits_kb)
    await state.set_state(ProfileSurvey.waiting_for_has_deposits)

# 3. –í–∫–ª–∞–¥—ã/–Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è
@router.message(ProfileSurvey.waiting_for_has_deposits)
async def has_deposits_q(message: types.Message, state: FSMContext):
    has_deposits = 1 if message.text == "–î–∞" else 0
    await state.update_data(has_deposits=has_deposits)
    if has_deposits:
        await message.answer("üè¶ –ö–∞–∫–æ–π –ø—Ä–æ—Ü–µ–Ω—Ç –≥–æ–¥–æ–≤—ã—Ö –ø–æ —Ç–≤–æ–∏–º –æ—Å–Ω–æ–≤–Ω—ã–º –≤–∫–ª–∞–¥–∞–º/–Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è–º?\n(–ù–∞–ø–∏—à–∏ —á–∏—Å–ª–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä: 7.5)", reply_markup=ReplyKeyboardRemove())
        await state.set_state(ProfileSurvey.waiting_for_deposit_details)
    else:
        await state.update_data(deposit_interest=None, deposit_amount=None)
        await message.answer("4Ô∏è‚É£ –ï—Å—Ç—å –ª–∏ —É —Ç–µ–±—è –∫—Ä–µ–¥–∏—Ç—ã, —Ä–∞—Å—Å—Ä–æ—á–∫–∏ –∏–ª–∏ –¥–æ–ª–≥–∏?\n(–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –º–Ω–µ –æ—Ü–µ–Ω–∏—Ç—å —Ç–≤–æ—é –∫—Ä–µ–¥–∏—Ç–Ω—É—é –Ω–∞–≥—Ä—É–∑–∫—É üè¶)", reply_markup=has_loans_kb)
        await state.set_state(ProfileSurvey.waiting_for_has_loans)

@router.message(ProfileSurvey.waiting_for_deposit_details)
async def deposit_details_q(message: types.Message, state: FSMContext):
    data = await state.get_data()
    if data.get('deposit_interest') is None:
        # –ñ–¥—ë–º –ø—Ä–æ—Ü–µ–Ω—Ç
        try:
            percent = float(message.text.replace(',', '.'))
            await state.update_data(deposit_interest=percent)
            await message.answer("üíµ –ö–∞–∫–æ–π –æ–±—â–∏–π –æ–±—ä—ë–º –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–π/–≤–∫–ª–∞–¥–æ–≤?\n(–í —Ä—É–±–ª—è—Ö, –Ω–∞–ø—Ä–∏–º–µ—Ä: 100000)")
        except ValueError:
            await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –ø—Ä–æ—Ü–µ–Ω—Ç —á–∏—Å–ª–æ–º, –Ω–∞–ø—Ä–∏–º–µ—Ä: 7.5")
    else:
        # –ñ–¥—ë–º —Å—É–º–º—É
        try:
            amount = float(message.text.replace(',', '.'))
            await state.update_data(deposit_amount=amount)
            await message.answer("4Ô∏è‚É£ –ï—Å—Ç—å –ª–∏ —É —Ç–µ–±—è –∫—Ä–µ–¥–∏—Ç—ã, —Ä–∞—Å—Å—Ä–æ—á–∫–∏ –∏–ª–∏ –¥–æ–ª–≥–∏?\n(–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –º–Ω–µ –æ—Ü–µ–Ω–∏—Ç—å —Ç–≤–æ—é –∫—Ä–µ–¥–∏—Ç–Ω—É—é –Ω–∞–≥—Ä—É–∑–∫—É üè¶)", reply_markup=has_loans_kb)
            await state.set_state(ProfileSurvey.waiting_for_has_loans)
        except ValueError:
            await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —Å—É–º–º—É —á–∏—Å–ª–æ–º, –Ω–∞–ø—Ä–∏–º–µ—Ä: 100000")

# 4. –ö—Ä–µ–¥–∏—Ç—ã/–¥–æ–ª–≥–∏
@router.message(ProfileSurvey.waiting_for_has_loans)
async def has_loans_q(message: types.Message, state: FSMContext):
    has_loans = 1 if message.text == "–î–∞" else 0
    await state.update_data(has_loans=has_loans)
    if has_loans:
        await message.answer("üí≥ –ö–∞–∫–æ–π –æ–±—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫ –ø–æ –∫—Ä–µ–¥–∏—Ç–∞–º/–¥–æ–ª–≥–∞–º?\n(–í —Ä—É–±–ª—è—Ö, –Ω–∞–ø—Ä–∏–º–µ—Ä: 150000)", reply_markup=ReplyKeyboardRemove())
        await state.set_state(ProfileSurvey.waiting_for_loans_details)
    else:
        await state.update_data(loans_total=None, loans_interest=None)
        await message.answer("5Ô∏è‚É£ –ò–Ω–≤–µ—Å—Ç–∏—Ä—É–µ—à—å –ª–∏ —Ç—ã –≤–æ —á—Ç–æ-—Ç–æ?\n(–ê–∫—Ü–∏–∏, –æ–±–ª–∏–≥–∞—Ü–∏–∏, –∫—Ä–∏–ø—Ç–∞ –∏ —Ç.–¥. üìä)", reply_markup=has_investments_kb)
        await state.set_state(ProfileSurvey.waiting_for_has_investments)

@router.message(ProfileSurvey.waiting_for_loans_details)
async def loans_details_q(message: types.Message, state: FSMContext):
    data = await state.get_data()
    if data.get('loans_total') is None:
        try:
            total = float(message.text.replace(',', '.'))
            await state.update_data(loans_total=total)
            await message.answer("üìà –ö–∞–∫–æ–π —Å—Ä–µ–¥–Ω–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç –ø–æ –∫—Ä–µ–¥–∏—Ç–∞–º?\n(–ù–∞–ø–∏—à–∏ —á–∏—Å–ª–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä: 12.5)")
        except ValueError:
            await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —Å—É–º–º—É —á–∏—Å–ª–æ–º, –Ω–∞–ø—Ä–∏–º–µ—Ä: 150000")
            return
    else:
        try:
            percent = float(message.text.replace(',', '.'))
            await state.update_data(loans_interest=percent)
            await message.answer("5Ô∏è‚É£ –ò–Ω–≤–µ—Å—Ç–∏—Ä—É–µ—à—å –ª–∏ —Ç—ã –≤–æ —á—Ç–æ-—Ç–æ?\n(–ê–∫—Ü–∏–∏, –æ–±–ª–∏–≥–∞—Ü–∏–∏, –∫—Ä–∏–ø—Ç–∞ –∏ —Ç.–¥. üìä)", reply_markup=has_investments_kb)
            await state.set_state(ProfileSurvey.waiting_for_has_investments)
        except ValueError:
            await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –ø—Ä–æ—Ü–µ–Ω—Ç —á–∏—Å–ª–æ–º, –Ω–∞–ø—Ä–∏–º–µ—Ä: 12.5")

# 5. –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏
@router.message(ProfileSurvey.waiting_for_has_investments)
async def has_investments_q(message: types.Message, state: FSMContext):
    has_investments = 1 if message.text == "–î–∞" else 0
    await state.update_data(has_investments=has_investments)
    if has_investments:
        await message.answer("üíπ –ö–∞–∫–æ–π –ø—Ä–∏–º–µ—Ä–Ω—ã–π –æ–±—ä—ë–º —Ç–≤–æ–∏—Ö –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π?\n(–í —Ä—É–±–ª—è—Ö, –Ω–∞–ø—Ä–∏–º–µ—Ä: 50000)", reply_markup=ReplyKeyboardRemove())
        await state.set_state(ProfileSurvey.waiting_for_investments_details)
    else:
        await state.update_data(investments_amount=None, investments_profit=None)
        await message.answer("6Ô∏è‚É£ –ö–∞–∫ —Ç—ã –æ—Ü–µ–Ω–∏–≤–∞–µ—à—å —Å–≤–æ—ë —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ–π—á–∞—Å?\n(–í—ã–±–µ—Ä–∏ –≤–∞—Ä–∏–∞–Ω—Ç –Ω–∏–∂–µ üëá)", reply_markup=financial_mood_kb)
        await state.set_state(ProfileSurvey.waiting_for_financial_mood)

@router.message(ProfileSurvey.waiting_for_investments_details)
async def investments_details_q(message: types.Message, state: FSMContext):
    data = await state.get_data()
    if data.get('investments_amount') is None:
        try:
            amount = float(message.text.replace(',', '.'))
            await state.update_data(investments_amount=amount)
            await message.answer("üìà –ö–∞–∫–æ–π —Å—Ä–µ–¥–Ω–∏–π –≥–æ–¥–æ–≤–æ–π –¥–æ—Ö–æ–¥/—É–±—ã—Ç–æ–∫ –ø–æ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è–º –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –≥–æ–¥ (–≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö)?\n(–ù–∞–ø–∏—à–∏ —á–∏—Å–ª–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä: 8.5)")
        except ValueError:
            await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —Å—É–º–º—É —á–∏—Å–ª–æ–º, –Ω–∞–ø—Ä–∏–º–µ—Ä: 50000")
            return
    else:
        try:
            percent = float(message.text.replace(',', '.'))
            await state.update_data(investments_profit=percent)
            await message.answer("6Ô∏è‚É£ –ö–∞–∫ —Ç—ã –æ—Ü–µ–Ω–∏–≤–∞–µ—à—å —Å–≤–æ—ë —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ–π—á–∞—Å?\n(–í—ã–±–µ—Ä–∏ –≤–∞—Ä–∏–∞–Ω—Ç –Ω–∏–∂–µ üëá)", reply_markup=financial_mood_kb)
            await state.set_state(ProfileSurvey.waiting_for_financial_mood)
        except ValueError:
            await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –ø—Ä–æ—Ü–µ–Ω—Ç —á–∏—Å–ª–æ–º, –Ω–∞–ø—Ä–∏–º–µ—Ä: 8.5")

# 6. –§–∏–Ω–∞–Ω—Å–æ–≤–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ
@router.message(ProfileSurvey.waiting_for_financial_mood)
async def financial_mood_q(message: types.Message, state: FSMContext):
    await state.update_data(financial_mood=message.text)
    data = await state.get_data()
    user_id = message.from_user.id
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
    async with aiosqlite.connect(DB_PATH) as db:
        await db.execute('''
            INSERT OR REPLACE INTO user_profiles (
                user_id, income_type, monthly_income, has_deposits, deposit_interest, deposit_amount,
                has_loans, loans_total, loans_interest, has_investments, investments_amount, investments_profit,
                financial_mood
            ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
        ''', (
            user_id,
            data.get('income_type'),
            data.get('monthly_income'),
            data.get('has_deposits'),
            data.get('deposit_interest'),
            data.get('deposit_amount'),
            data.get('has_loans'),
            data.get('loans_total'),
            data.get('loans_interest'),
            data.get('has_investments'),
            data.get('investments_amount'),
            data.get('investments_profit'),
            data.get('financial_mood')
        ))
        await db.commit()
    await message.answer("üéâ –°–ø–∞—Å–∏–±–æ! –ü—Ä–æ—Ñ–∏–ª—å –∑–∞–ø–æ–ª–Ω–µ–Ω. –¢–µ–ø–µ—Ä—å —è —Å–º–æ–≥—É –¥–∞–≤–∞—Ç—å —Ç–µ–±–µ –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–µ –∏ –ø–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã! üòä\n\n–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –Ω–∞–∂–º–∏ /menu", reply_markup=ReplyKeyboardRemove())
    await state.clear() 