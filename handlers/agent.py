from aiogram import Router, F
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from keyboards import main_menu
from db import DB_PATH
import aiosqlite
from gpt import ask_agent
from .states import AskAgentState
from .utils import beautify_answer
from handlers.advice import build_user_context

router = Router()

# ask_agent_start, process_agent_question 

@router.message(F.text == "üí¨ –í–æ–ø—Ä–æ—Å –∞–≥–µ–Ω—Ç—É")
async def ask_agent_start(message: Message, state: FSMContext):
    await state.set_state(AskAgentState.waiting_for_question)
    await message.answer("üí¨ –ó–∞–¥–∞–π—Ç–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –≤–∞—à–µ–º—É —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–º—É –∞–≥–µ–Ω—Ç—É! –ù–∞–ø—Ä–∏–º–µ—Ä: '–ö–∞–∫ –º–Ω–µ —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å?', '–°—Ç–æ–∏—Ç –ª–∏ –º–Ω–µ —É–≤–µ–ª–∏—á–∏—Ç—å –¥–æ—Ö–æ–¥?', '–ö–∞–∫ –±—ã—Å—Ç—Ä–µ–µ –¥–æ—Å—Ç–∏—á—å —Ü–µ–ª–∏?'\n\n–î–ª—è –æ—Ç–º–µ–Ω—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ '–û—Ç–º–µ–Ω–∞'.")

@router.message(AskAgentState.waiting_for_question)
async def process_agent_question(message: Message, state: FSMContext):
    if message.text.lower() == "–æ—Ç–º–µ–Ω–∞":
        await state.clear()
        await message.answer("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.", reply_markup=main_menu)
        return
    user_id = message.from_user.id
    # –°–æ–±–∏—Ä–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    async with aiosqlite.connect(DB_PATH) as db:
        cursor = await db.execute("SELECT type, category, amount, date FROM transactions WHERE user_id=? ORDER BY date DESC LIMIT 30", (user_id,))
        transactions = await cursor.fetchall()
    history = "\n".join([f"{r[3][:10]}: {r[0]} {r[1]} {r[2]:.2f}‚ÇΩ" for r in transactions]) if transactions else "–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
    user_context = await build_user_context(user_id)
    await message.answer("ü§ñ –ê–≥–µ–Ω—Ç –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à–∏ —Ñ–∏–Ω–∞–Ω—Å—ã –∏ —Ñ–æ—Ä–º—É–ª–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç... –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ! ‚è≥", reply_markup=main_menu)
    answer = await ask_agent(history, user_context, message.text)
    answer = beautify_answer(answer)
    await state.clear()
    await message.answer(f"<b>–û—Ç–≤–µ—Ç –∞–≥–µ–Ω—Ç–∞:</b>\n{answer}\n\nüí° –ï—Å–ª–∏ –Ω—É–∂–µ–Ω –µ—â—ë —Å–æ–≤–µ—Ç ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ!", parse_mode="HTML") 